@model LibraryReporter.Models.Book.AcceptanceBookViewModel



<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Прием книги</title>
    <style>
        .container {
            margin-block: 45px;
            max-width: 600px;
            max-height: 100%;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 10px;
            box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
        }

        .form-group {
            margin-bottom: 15px;
            display: flex;
            flex-direction: column;
        }

            .form-group label {
                margin-bottom: 5px;
            }

            .form-group input {
                padding: 8px;
                font-size: 16px;
            }

            .form-group img {
                max-width: 100%;
                margin-top: 10px;
                border: 1px solid #ccc;
            }
        /* Кнопка "Принять книгу" – активная (зеленая) */
        .submit-btn {
            padding: 10px 20px;
            font-size: 16px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .submit-btn:hover {
                background-color: #45a049;
            }
            /* Для заблокированной кнопки – серая */
            .submit-btn:disabled,
            .submit-btn:disabled:hover {
                background-color: gray;
                cursor: not-allowed;
            }
    </style>
</head>
<body class="creationbook">
    <div class="container">
        <form id="acceptanceForm" action="/Book/AcceptanceBook" method="post">

            <input type="hidden" name="bookId" value="@Model.Id">
            
            <div class="form-group">
                <label for="title">Название книги:</label>
                <div id="BookNameDisplay">@Model.BookName</div>
                <input type="hidden" name="BookName" value="@Model.BookName">
                @Html.ValidationMessageFor(x => x.BookName)
            </div>

            <div class="form-group">
                <label for="title">Автор:</label>
                <div id="AuthorDisplay">@Model.Author</div>
                <input type="hidden" name="Author" value="@Model.Author">
                @Html.ValidationMessageFor(x => x.Author)
            </div>

            <div class="form-group">
                <label for="title">Издатель:</label>
                <div id="PublisherDisplay">@Model.Publisher</div>
                <input type="hidden" name="Publisher" value="@Model.Publisher">
                @Html.ValidationMessageFor(x => x.Publisher)
            </div>

            <div class="form-group">
                <label for="title">Штрихкод:</label>
                <div style="display: flex; align-items: center;">
                    <input type="text" id="BookBarcode" placeholder="Введите штрихкод">
                    <button type="button" id="validateButton" class="action-icon" style="margin-left:10px;">
                        <img class="items-center" src="/images/search-icon.png" alt="Проверить штрихкод">
                    </button>
                </div>
                @Html.ValidationMessageFor(x => x.Barcode)
            </div>

            

            <div class="form-group">
                <label for="title">Читатель:</label>
                <div id="ReaderDisplay">@Model.Reader</div>
                <input type="hidden" name="Reader" value="@Model.Reader">
                @Html.ValidationMessageFor(x => x.Reader)
            </div>

            <div class="form-group">
                <label for="bookDates">Дата приема книги:</label>
                <p><strong>@Model.AcceptanceDate.ToString("yyyy-MM-dd")</strong></p>
            </div>
            <input type="hidden" name="AcceptanceDate" value="@Model.AcceptanceDate">
            <input type="hidden" name="Barcode" id="VerifiedBarcode" value="">
            <input type="hidden" name="Id" id="@Model.Id" value="@Model.Id">
            <button type="submit" id="acceptButton" class="submit-btn" disabled>Принять книгу</button>
        </form>
    </div>

    <script>
        document.getElementById("validateButton").addEventListener("click", function (e) {
            e.preventDefault(); // Отменяем стандартное поведение кнопки

            var barcode = document.getElementById("BookBarcode").value;
            var bookId = parseInt(document.querySelector("input[name='bookId']").value, 10);

            // Формируем объект для отправки, свойства должны соответствовать модели BarcodeCheckModel
            var data = {
                BookBarcode: barcode,
                BookId: bookId
            };

            fetch("/Book/ValidateBarcode", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data)
            })
                .then(response => response.json())
                .then(result => {
                    if (result.match) {
                        // Обращаемся к свойствам с camelCase, как они возвращены JSON-ом
                        var verifiedBarcode = result.bookBarcode;
                        var verifiedBookId = result.bookId;

                        // Используем переменные для обновления скрытых полей
                        document.getElementById("VerifiedBarcode").value = verifiedBarcode;
                        // Если необходимо, можно обновить и поле для идентификатора (если его тоже надо поменять)
                        // document.getElementById("BookIdField").value = verifiedBookId;

                        document.getElementById("acceptButton").disabled = false;
                    } else {
                        alert(result.message);
                        document.getElementById("acceptButton").disabled = true;
                    }
                })
                .catch(error => console.error("Ошибка запроса:", error));
        });


    </script>
</body>
